{-# OPTIONS --cubical --safe #-}

module Data.Binary.Increment.Strict where

open import Prelude
open import Strict
open import Data.Binary.Definition
open import Data.Bits.Strict
open import Data.Binary.Increment

inc‚Ä≤ : ùîπ ‚Üí ùîπ
inc‚Ä≤ 0·µá      = 1·µá 0·µá
inc‚Ä≤ (1·µá xs) = 2·µá xs
inc‚Ä≤ (2·µá xs) = 0‚à∑! inc‚Ä≤ xs

inc‚Ä≤‚â°inc : ‚àÄ xs ‚Üí inc‚Ä≤ xs ‚â° inc xs
inc‚Ä≤‚â°inc 0·µá = refl
inc‚Ä≤‚â°inc (1·µá xs) = refl
inc‚Ä≤‚â°inc (2·µá xs) = 0‚à∑!‚â°0‚à∑ (inc‚Ä≤ xs) Õæ cong 1·µá_ (inc‚Ä≤‚â°inc xs)
