{-# OPTIONS --cubical --safe #-}

module Data.Binary.Subtraction where

open import Data.Binary.Definition
open import Data.Nat

double : ๐น โ ๐น
double 0แต      = 0แต
double (1แต xs) = 2แต double xs
double (2แต xs) = 2แต 1แต xs

dec : ๐น โ ๐น
dec 0แต = 0แต
dec (2แต xs) = 1แต xs
dec (1แต xs) = double xs

ones : โ โ ๐น โ ๐น
ones zero    xs = xs
ones (suc n) xs = ones n (1แต xs)

fromZโ : โ โ ๐น โ ๐น
fromZโ n 0แต      = 0แต
fromZโ n (1แต xs) = 2แต ones n (double xs)
fromZโ n (2แต xs) = 2แต ones (suc n) xs

mutual
  complโโฒ : โ โ ๐น โ ๐น โ ๐น
  complโโฒ n 0แต      _       = 2แต ones n 0แต
  complโโฒ n (1แต xs) 0แต      = fromZโ (suc n) xs
  complโโฒ n (2แต xs) 0แต      = 2แต ones n (double xs)
  complโโฒ n (1แต xs) (1แต ys) = 2แต ones n (complโโฒ 0 xs ys)
  complโโฒ n (1แต xs) (2แต ys) = complโโฒ (suc n) xs ys
  complโโฒ n (2แต xs) (1แต ys) = complโโฒ (suc n) xs ys
  complโโฒ n (2แต xs) (2แต ys) = 2แต ones n (complโโฒ 0 xs ys)

  complโโฒ : โ โ ๐น โ ๐น โ ๐น
  complโโฒ n xs      0แต      = fromZโ n xs
  complโโฒ n 0แต      _       = 0แต
  complโโฒ n (1แต xs) (1แต ys) = complโโฒ (suc n) xs ys
  complโโฒ n (1แต xs) (2แต ys) = 2แต ones n (complโโฒ 0 xs ys)
  complโโฒ n (2แต xs) (1แต ys) = 2แต ones n (complโโฒ 0 xs ys)
  complโโฒ n (2แต xs) (2แต ys) = complโโฒ (suc n) xs ys

mutual
  complโ : ๐น โ ๐น โ ๐น
  complโ xs      0แต      = dec xs
  complโ 0แต      _       = 1แต 0แต
  complโ (1แต xs) (1แต ys) = 1แต complโ xs ys
  complโ (1แต xs) (2แต ys) = complโโฒ zero xs ys
  complโ (2แต xs) (1แต ys) = complโโฒ zero xs ys
  complโ (2แต xs) (2แต ys) = 1แต complโ xs ys

  complโ : ๐น โ ๐น โ ๐น
  complโ 0แต      _       = 0แต
  complโ xs      0แต      = xs
  complโ (1แต xs) (1แต ys) = complโโฒ zero xs ys
  complโ (1แต xs) (2แต ys) = 1แต complโ xs ys
  complโ (2แต xs) (1แต ys) = 1แต complโ xs ys
  complโ (2แต xs) (2แต ys) = complโโฒ zero xs ys

open import Data.Binary.Order
open import Data.Bool

infixl 6 _-_
_-_ : ๐น โ ๐น โ ๐น
n - m = if n โคแดฎ m then 0แต else complโ n m

open import Data.Binary.Testers
open import Path using (refl)

_ : test _-_ _โธ_ 30
_ = refl
