{-# OPTIONS --cubical --safe #-}

module Data.Binary.PerformanceTests.Multiplication where

open import Prelude
open import Data.Binary.Definition
open import Data.Binary.Addition using (_+_)
open import Data.Binary.Multiplication using (_*_)
open import Data.Binary.Increment using (inc)

one-thousand : ๐น
one-thousand = 2แต 1แต 1แต 2แต 1แต 2แต 2แต 2แต 2แต 0แต

pow-r : ๐น โ โ โ ๐น
pow-r x zero    = 1แต 0แต
pow-r x (suc n) = x * pow-r (inc x) n

pow-l : ๐น โ โ โ ๐น
pow-l x zero    = 1แต 0แต
pow-l x (suc n) = pow-l (inc x) n * x

n : โ
n = 6

f : ๐น
f = one-thousand

-- The actual performance test (uncomment and time how long it takes to type-check)
-- _ : pow-r f n โก pow-l f n
-- _ = refl
